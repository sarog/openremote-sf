log4j.rootLogger = INFO, console, file

log4j.appender.console= org.apache.log4j.ConsoleAppender
log4j.appender.console.Threshold = ERROR
log4j.appender.console.layout= org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern= [Controller] %d %p [%t] %C.%M(%L) | %m%n

log4j.appender.file = org.apache.log4j.RollingFileAppender
log4j.appender.file.File = ../logs/controller.log
log4j.appender.file.MaxFileSize = 500KB
log4j.appender.file.MaxBackupIndex = 10
log4j.appender.file.layout = org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern = [Controller]%d %p [%t] %C.%M(%L) | %m%n



# ---------------------------------------------------------------------------------------------
#
#  KNX LOGGING
#
#  Direct KNX related logging to their own category. KNX logging is separated to the usual
#  operational log that records some specific KNX related events and a detailed KNX debug
#  log that records a lot of detailed information about the KNX stack.
#
#  The debug log is by default set to low file size values with the assumption that the debug
#  log is not required under normal circumstances (and it can be very chatty). If you do need
#  to analyze the debug log, you are likely to need to increase the log sizes first to retrieve
#  sufficient information over a longer period of time.
#
#  Note on performance : debug log does have an impact on performance, however under usual
#  circumstances this is not an issue. However, if you are sending hundreds of KNX frames per
#  second and need to optimize performance, turning off the knx debug logging or all of the
#  KNX logging altogether may help with performance optimization.
#
# ---------------------------------------------------------------------------------------------


# Enable all of KNX logging -- file log appenders may thershold which records they
# want to include
log4j.logger.OpenRemote.Controller.protocol.knx = ALL, knx-file, knx-debug-file


# ---- KNX FILE LOG -------------------------------------------------------------------------------

# Log file will roll over (delete) old entries once maximum number of backup files
# is reached (each file size is defined with MaxFileSize property)
log4j.appender.knx-file = org.apache.log4j.RollingFileAppender

# Location of the log file
log4j.appender.knx-file.File = ../logs/knx/knx.log

# Only log INFO or above. Detailed debug messages are in a separate debug log file
log4j.appender.knx-file.Threshold = INFO

# Maximum size of the log file
log4j.appender.knx-file.MaxFileSize = 500KB

# Keep at most one backup file until older entries are deleted and written over.
log4j.appender.knx-file.MaxBackupIndex = 1

# Formatting of log records -- print priority (level) %p, date/time %d and message %m
log4j.appender.knx-file.layout = org.apache.log4j.PatternLayout
log4j.appender.knx-file.layout.ConversionPattern = %p %d (KNX): %m%n


# ---- KNX DEBUG LOG ------------------------------------------------------------------------------

# Log file will roll over (delete) old entries once  maximum number of backup files
# is reached (each file size is defined with MaxFileSize property). Both the size and
# number of backups is set rather low for debug logging by default (see values below).
# If you're tracking down an issue with the KNX implementation, you will want to increase
# these values.
log4j.appender.knx-debug-file = org.apache.log4j.RollingFileAppender

# Location of the log file
log4j.appender.knx-debug-file.File = ../logs/knx/knx-debug.log

# Logs *everything* related to KNX. Can be *very* chatty.
log4j.appender.knx-debug-file.Threshold = ALL

# Maximum size of the log file -- by default this is relatively low compared to the amount
# of logging that may occur at debug level. If you're debugging an issue, you will want to
# increase this file size limit and add a number of backup log files (see below) to ensure
# older log files are not deleted and written over.
log4j.appender.knx-debug-file.MaxFileSize = 100KB

# By default, do not keep backup logs. This means that as soon as the max file size is reached
# on the debug log, it is deleted and new empty log is created to replace it.
#
# If you're debugging an issue, you will want to increase both the file size and the number of
# backup files as the debug logging can be *very* noisy.
log4j.appender.knx-debug-file.MaxBackupIndex = 0

# Formatting of log records -- print priority (level) %p, date/time %d and message %m
log4j.appender.knx-debug-file.layout = org.apache.log4j.PatternLayout
log4j.appender.knx-debug-file.layout.ConversionPattern = %p %d (KNX): %m%n




# ---------------------------------------------------------------------------------------------
#
#  1-WIRE LOGGING
#
#  Direct 1-wire related logging to its own category. Currently 1-wire logging is all directed
#  into a single file. Set threshold (INFO, DEBUG, or other) accordingly.
#
# ---------------------------------------------------------------------------------------------


# Enable all of 1-wire logging -- file log appenders may thershold which records they
# want to include
log4j.logger.OpenRemote.Controller.protocol.onewire = ALL, onewire-file


# ---- 1-WIRE FILE LOG -------------------------------------------------------------------------------

# Log file will roll over (delete) old entries once maximum number of backup files
# is reached (each file size is defined with MaxFileSize property)
log4j.appender.onewire-file = org.apache.log4j.RollingFileAppender

# Location of the log file
log4j.appender.onewire-file.File = ../logs/onewire/onewire.log

# Only log INFO or above. If you want more detailed log, set threshold to DEBUG. If you want
# less detailed log, set threshold to WARN
log4j.appender.onewire-file.Threshold = INFO

# Maximum size of the log file
log4j.appender.onewire-file.MaxFileSize = 500KB

# Keep at most one backup file until older entries are deleted and written over.
log4j.appender.onewire-file.MaxBackupIndex = 1

# Formatting of log records -- print priority (level) %p, date/time %d and message %m
log4j.appender.onewire-file.layout = org.apache.log4j.PatternLayout
log4j.appender.onewire-file.layout.ConversionPattern = %p %d (1-WIRE): %m%n




# -------------------------------------------------------------------------------------------------

# Throttle Spring's verbosity
log4j.logger.org.springframework=WARN
