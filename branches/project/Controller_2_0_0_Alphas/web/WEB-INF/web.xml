<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>controller_profile_service</display-name>

    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>

    <context-param>
      <param-name>log4jExposeWebAppRoot</param-name>
      <param-value>false</param-value>
    </context-param>
    
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/classes/spring-context.xml, /WEB-INF/classes/spring-quartz.xml
        </param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/classes/log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>

    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                /WEB-INF/classes/spring-servlet.xml
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <url-pattern>*.htm</url-pattern>
    </servlet-mapping>
    
    <servlet>
        <servlet-name>controlRESTServlet</servlet-name>
        <servlet-class>org.openremote.controller.rest.ControlCommandRESTServlet</servlet-class>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>controlRESTServlet</servlet-name>
        <url-pattern>/rest/control/*</url-pattern>
    </servlet-mapping>
    
    <servlet>
        <servlet-name>statusRESTServlet</servlet-name>
        <servlet-class>org.openremote.controller.rest.StatusCommandRESTServlet</servlet-class>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>statusRESTServlet</servlet-name>
        <url-pattern>/rest/status/*</url-pattern>
    </servlet-mapping>
    
    <servlet>
    	<servlet-name>StatusPollingRESTServlet</servlet-name>
    	<servlet-class>org.openremote.controller.rest.StatusPollingRESTServlet</servlet-class>
    </servlet>
    
    <servlet-mapping>
    	<servlet-name>StatusPollingRESTServlet</servlet-name>
    	<url-pattern>/rest/polling/*</url-pattern>
    </servlet-mapping>
    
    <servlet>
        <servlet-name>resourceServlet</servlet-name>
        <servlet-class>org.openremote.controller.servlet.ResourceServlet</servlet-class>
    </servlet>
    <servlet>
    	<description>
    	display all the panels.</description>
    	<display-name>
    	ShowPanelsRestServlet</display-name>
    	<servlet-name>ShowPanelsRestServlet</servlet-name>
    	<servlet-class>
    	org.openremote.controller.rest.ShowPanelsRestServlet</servlet-class>
    </servlet>
    <servlet>
    	<description>
    	get the profile information by panel name</description>
    	<display-name>
    	GetProfileRestServlet</display-name>
    	<servlet-name>GetProfileRestServlet</servlet-name>
    	<servlet-class>
    	org.openremote.controller.rest.GetProfileRestServlet</servlet-class>
    </servlet>
    <servlet>
    	<description>
    	used to send 401 http error code. </description>
    	<display-name>
    	LogoutServlet</display-name>
    	<servlet-name>LogoutServlet</servlet-name>
    	<servlet-class>
    	org.openremote.controller.servlet.LogoutServlet</servlet-class>
    </servlet>
    <servlet>
    	<description>
    	</description>
    	<display-name>RoundRobinRESTServlet</display-name>
    	<servlet-name>RoundRobinRESTServlet</servlet-name>
    	<servlet-class>org.openremote.controller.rest.RoundRobinRESTServlet</servlet-class>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>resourceServlet</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>ShowPanelsRestServlet</servlet-name>
    	<url-pattern>/rest/panels</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
    	<servlet-name>ShowPanelsRestServlet</servlet-name>
    	<url-pattern>/rest/panels/</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
    	<servlet-name>GetProfileRestServlet</servlet-name>
    	<url-pattern>/rest/panel/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>LogoutServlet</servlet-name>
    	<url-pattern>/logout</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>LogoutServlet</servlet-name>
    	<url-pattern>/logout/</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>RoundRobinRESTServlet</servlet-name>
    	<url-pattern>/rest/servers</url-pattern>
    </servlet-mapping>


    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

	<listener>
        <listener-class>
        	org.springframework.web.util.Log4jConfigListener
        </listener-class>
    </listener>
    
    <listener>
        <listener-class>
            org.openremote.controller.listener.ApplicationListener
        </listener-class>
    </listener>
    
    <listener>
		<listener-class>org.openremote.controller.statuscache.InitCachedStatusDBListener</listener-class>
	</listener>
	
	<!-- Constraint resource: /rest/control/* -->
<!--	
	<security-constraint>
	  <web-resource-collection>
	    <web-resource-name>Control command RESTful service of Openremote Controller</web-resource-name>
	    <description>Control command RESTful service of Openremote Controller</description>
	    <url-pattern>/rest/control/*</url-pattern>
	    <http-method>GET</http-method>
	    <http-method>POST</http-method>
	  </web-resource-collection>
	  <auth-constraint>
	    <role-name>openremote</role-name>
	  </auth-constraint>
	</security-constraint>
-->

	<!-- Constraint resource: /rest/panel/* -->
<!--
	<security-constraint>
	  <web-resource-collection>
	    <web-resource-name>Panel identity RESTful service of Openremote Controller</web-resource-name>
	    <description>Panel identity RESTful service of Openremote Controller</description>
	    <url-pattern>/rest/panel/*</url-pattern>
	    <http-method>GET</http-method>
	    <http-method>POST</http-method>
	  </web-resource-collection>
	  <auth-constraint>
	    <role-name>openremote</role-name>
	  </auth-constraint>
	</security-constraint>
-->

	<!-- 
	<security-constraint>
	  <web-resource-collection>
	    <web-resource-name>Status command RESTful service of Openremote Controller</web-resource-name>
	    <description>Status command RESTful service of Openremote Controller</description>
	    <url-pattern>/rest/status/*</url-pattern>
	    <http-method>GET</http-method>
	    <http-method>POST</http-method>
	  </web-resource-collection>
	  <auth-constraint>
	    <role-name>openremote</role-name>
	  </auth-constraint>
	</security-constraint>
	<security-constraint>
	  <web-resource-collection>
	    <web-resource-name>Polling command RESTful service of Openremote Controller</web-resource-name>
	    <description>Polling command RESTful service of Openremote Controller</description>
	    <url-pattern>/rest/polling/*</url-pattern>
	    <http-method>GET</http-method>
	    <http-method>POST</http-method>
	  </web-resource-collection>
	  <auth-constraint>
	    <role-name>openremote</role-name>
	  </auth-constraint>
	</security-constraint>
	-->

<!--
	<login-config>
	  <auth-method>BASIC</auth-method>
	  <realm-name>OPENREMOTE_Controller</realm-name>
	</login-config>
	<security-role>
	  <role-name>openremote</role-name>
	</security-role>
-->
</web-app>
