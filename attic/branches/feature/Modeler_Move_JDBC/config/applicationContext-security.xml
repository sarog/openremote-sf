<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"  
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
     xmlns:security="http://www.springframework.org/schema/security"  
     xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd  
             http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.1.xsd"> 
<!-- 
    <security:http lowercase-comparisons="false"> <!- note: no auto-config attribute! access="ROLE_MODELER,ROLE_DESIGNER"->
        <security:intercept-url pattern="/login.jsp" filters="none"/>
        <security:intercept-url pattern="/Modeler.jsp" access="ROLE_MODELER,ROLE_DESIGNER,ROLE_ADMIN"/>
        <security:intercept-url pattern="/fileUploadController.htm" access="ROLE_MODELER,ROLE_DESIGNER"/>
        <security:form-login login-page="/login.jsp" default-target-url="/Modeler.jsp" login-processing-url="/j_security_check" authentication-failure-url="/login.jsp?fail=true"/>
        <security:logout logout-success-url="/login.jsp" logout-url="/j_security_logout" invalidate-session="true"/>
        <security:remember-me key="or"/>
    </security:http>
	 
   <security:authentication-manager alias="authenticationManager"/>
   
	<security:authentication-provider>
		<security:jdbc-user-service data-source-ref="dataSource"  
    users-by-username-query="SELECT U.username, U.password, U.valid AS 'enabled' FROM user U where U.username=?"  
    authorities-by-username-query="SELECT U.username, R.name as 'authority' FROM user U JOIN user_role A ON U.oid = A.user_oid JOIN role R ON R.oid = A.role_oid WHERE U.username=?"/>
		<security:password-encoder hash="md5">
			<security:salt-source user-property="username"/> 
		</security:password-encoder>
	</security:authentication-provider>
   
    <bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.vote.RoleVoter"/>
                <bean class="org.springframework.security.vote.AuthenticatedVoter"/>
            </list>
        </property>
    </bean>
-->
 
<!--
    Atlassian Crowd SSO based security
    ==================================
-->
   <security:global-method-security secured-annotations="enabled">
      <!-- AspectJ pointcut expression that locates our "post" method and applies security that way
      <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
      -->
   </security:global-method-security>
    
    <bean id="dbUserService" class="org.springframework.security.userdetails.jdbc.JdbcDaoImpl">  
             <property name="dataSource" ref="dataSource"/>  
             <property name="usersByUsernameQuery">  
                 <value>  
                    SELECT U.username, U.password, U.valid AS 'enabled' FROM user U where U.username=?
                 </value>  
             </property>  
             <property name="authoritiesByUsernameQuery">  
                 <value>  
                      SELECT U.username, R.name as 'authority' FROM user U JOIN user_role A ON U.oid = A.user_oid JOIN role R ON R.oid = A.role_oid WHERE U.username=?
                 </value>  
             </property>  
         </bean>

   <security:http lowercase-comparisons="true" entry-point-ref="crowdAuthenticationProcessingFilterEntryPoint">
       <security:intercept-url pattern="/login.jsp" filters="none"/>
        <security:intercept-url pattern="/Modeler.jsp" access="ROLE_MODELER,ROLE_DESIGNER,ROLE_ADMIN"/>
        <security:intercept-url pattern="/fileUploadController.htm" access="ROLE_MODELER,ROLE_DESIGNER,ROLE_ADMIN"/>
        <!--security:remember-me user-service-ref="dbUserService" key="or"/-->
    </security:http>

    <bean id="crowdUserDetailsService" class="com.atlassian.crowd.integration.springsecurity.user.CrowdUserDetailsServiceImpl">
        <property name="authenticationManager" ref="crowdAuthenticationManager"/>
        <property name="groupMembershipManager" ref="crowdGroupMembershipManager"/>
        <property name="userManager" ref="crowdUserManager"/>
        <property name="authorityPrefix" value="ROLE_"/>
   </bean>

   <bean id="crowdAuthenticationProvider" class="com.atlassian.crowd.integration.springsecurity.RemoteCrowdAuthenticationProvider">
      <security:custom-authentication-provider />
      <constructor-arg ref="crowdAuthenticationManager"/>
      <constructor-arg ref="httpAuthenticator"/>
      <constructor-arg ref="crowdUserDetailsService"/>
   </bean>

   <security:authentication-manager alias="authenticationManager"/>

   <bean id="crowdAuthenticationProcessingFilterEntryPoint" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
      <property name="loginFormUrl" value="/login.jsp"/>
   </bean>

   <bean id="crowdAuthenticationProcessingFilter" class="com.atlassian.crowd.integration.springsecurity.CrowdSSOAuthenticationProcessingFilter">
       <security:custom-filter position="AUTHENTICATION_PROCESSING_FILTER"/>
       <property name="httpAuthenticator" ref="httpAuthenticator"/>
       <property name="authenticationManager" ref="authenticationManager"/>
       <property name="authenticationFailureUrl" value="/login.jsp?fail=true"/>
       <property name="defaultTargetUrl" value="/Modeler.jsp"/>
       <property name="filterProcessesUrl" value="/j_security_check"/>
   </bean>

   <bean id="crowdLogoutHandler" class="com.atlassian.crowd.integration.springsecurity.CrowdLogoutHandler">
       <property name="httpAuthenticator" ref="httpAuthenticator"/>
   </bean>

   <bean id="logoutFilter" class="org.springframework.security.ui.logout.LogoutFilter">
       <security:custom-filter position="LOGOUT_FILTER"/>
       <constructor-arg value="/login.jsp"/>
       <constructor-arg>
           <list>
               <ref bean="crowdLogoutHandler"/>
               <bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler"/>
           </list>
       </constructor-arg>
       <property name="filterProcessesUrl" value="/j_security_logout"/>
   </bean>

   <bean id="filterInvocationInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
        <property name="objectDefinitionSource">
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /console/secure/**=ROLE_ADMIN
                /console/user/**=IS_AUTHENTICATED_FULLY
            </value>
        </property>
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.vote.RoleVoter"/>
                <bean class="org.springframework.security.vote.AuthenticatedVoter"/>
            </list>
        </property>
    </bean>
    
</beans>