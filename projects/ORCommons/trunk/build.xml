<?xml version="1.0" encoding="utf-8" ?>
<!--
OpenRemote, the Home of the Digital Home.
Copyright 2008-2011, OpenRemote Inc.

See the contributors.txt file in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 3.0 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

You should have received a copy of the GNU General Public
License along with this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->
<!--
 |  Build file for OpenRemote Commons Library
 |
 |  Author: Eric Bariaux
 +-->
<project name="ORCommons" default="javac" basedir=".">

	<property file="build.local.properties"/>
	<property file="build.properties"/>

	<!-- Some base dir used -->
	<property name="project.name" value="or-commons" />
	<property name="lib.dir" value="lib" />
	<property name="src.dir" value="src"/>
	<property name="test.dir" value="test"/>
	<property name="config.dir" value="config"/>
        <property name="build.dir" value="build"/>
        <property name="build.classes.dir" value="${build.dir}/classes"/>
	<property name="build.config.dir" value="build_config"/>
	<property name="output.dir" value="output"/>

	<!-- dirs for test build and output -->
	<property name="test.build.dir" value="test_build"/>
	<property name="test.build.classes.dir" value="${test.build.dir}/classes"/>
	<property name="test.output" value="${test.build.dir}/test-output"/>
	<property name="test.report" value="${test.build.dir}/test-report"/>

	<!-- javadoc -->
	<property name="javadoc.dir" value="doc" />
	<property name="javadoc.locale" value="en_US" />

	<!-- ==================================================================== -->
	<!-- project class path                                                   -->
	<!-- ==================================================================== -->
	<path id="project.class.path">
		<pathelement location="${build.classes.dir}"/>
		<pathelement location="${test.build.classes.dir}"/>
		<!-- Add any additional non-server libs (such as JUnit, TestNG) -->
		<fileset dir="${lib.dir}" includes="core/**/*.jar"/>
		<fileset dir="${lib.dir}" includes="test/**/*.jar"/>
		<fileset dir="${lib.dir}" includes="compile/**/*.jar"/>
	</path>

	<!-- ==================================================================== -->
	<!-- Clean previous build                                                 -->
	<!-- ==================================================================== -->
	<target name="clean" description="Cleans this project">
		<delete dir="${build.classes.dir}" failonerror="false" />
		<delete dir="${output.dir}"/>
		<delete dir="${test.build.dir}"/>
	</target>

	<!-- ==================================================================== -->
	<!-- Prepare lib for build                                                -->
	<!-- ==================================================================== -->
	<target name="libs" depends="clean" description="Copy libs to WEB-INF/lib">
		<mkdir dir="${output.dir}" />
		<!-- Add any additional server libs that need to be copied -->
	</target>

	<!-- ==================================================================== -->
	<!-- Run javac to compile class                                           -->
	<!-- ==================================================================== -->
	<target name="javac" depends="libs" description="Compile java source">
		<echo message="--------------------------------------------------------------------" />
		<echo message=" Compiling Java classes..." />
		<echo message="--------------------------------------------------------------------" />
		<echo message="" />
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.dir}" includes="**" encoding="utf-8" destdir="${build.classes.dir}" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<!-- ==================================================================== -->
	<!-- Pack jar                                                             -->
	<!-- ==================================================================== -->
	<target name="jar" depends="javac" description="Create a jar file">
		<echo message="--------------------------------------------------------------------" />
		<echo message=" Packing jar..." />
		<echo message="--------------------------------------------------------------------" />
		<echo message="" />
    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}" includes="**/**"/>
  	</copy>
		<zip destfile="${output.dir}/${project.name}.jar" basedir="${build.classes.dir}"/>
	</target>


	<!-- ==================================================================== -->
	<!-- Compile test class into test_build/classes                           -->
	<!-- ==================================================================== -->
	<target name="compile-test" depends="javac" description="--> compile the test cases.">
		<echo message="--------------------------------------------------------------------" />
		<echo message=" Compiling test..." />
		<echo message="--------------------------------------------------------------------" />
		<echo message="" />
		<copy todir="${test.build.classes.dir}">
			<fileset dir="${test.dir}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		<javac srcdir="${test.dir}" destdir="${test.build.classes.dir}" classpathref="project.class.path" />
	</target>

	<!-- ==================================================================== -->
	<!-- Javadoc                                                              -->
	<!-- ==================================================================== -->
	<target name="javadoc" description="Generate API docs for the DocCheck source">
		<echo message="--------------------------------------------------------------------" />
		<echo message=" Generating javadoc..." />
		<echo message="--------------------------------------------------------------------" />
		<echo message="" />
		<mkdir dir="${javadoc.dir}" />
		<javadoc
	              locale           ="${javadoc.locale}"
	              defaultexcludes  = "yes"
	              use              = "yes"
	              header           = "OpenRemote Modeler API "
	              doctitle         = "OpenRemote Modeler API Specification V2.0"
	              nodeprecatedlist = "yes"
			      classpathref     = "project.class.path" 
	              sourcepath       = "./${src.dir}"
	              destdir          = "./${javadoc.dir}"
	              additionalparam  = "-breakiterator"
	          />
	</target>

</project>
