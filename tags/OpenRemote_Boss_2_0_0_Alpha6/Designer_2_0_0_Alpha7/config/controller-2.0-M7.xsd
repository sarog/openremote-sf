<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.openremote.org" targetNamespace="http://www.openremote.org">

    <xsd:annotation>
		<xsd:documentation><![CDATA[
			OpenRemote Controller XML Schema, version 2.0.
			Authors:Dan Cong, Javen Zhang.
						
			This defines the following:
			
			1. device component: such as a switch or a slider... whose id is consistent with the one in panel.xml
			2. status sensor : used to do polling to get current status of a device
			3. device command: such as "TV on", support different device command protocal (IR, X10, KNX ...)
			
		]]></xsd:documentation>
	</xsd:annotation>
	<!-- Top-level <openremote> tag -->
	<xsd:element name="openremote">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
	The top level (typically root) element. Allows the definition
	of the different components, sensors, commands.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="components" />
				<xsd:element ref="sensors" />
				<xsd:element ref="commands" />
				<xsd:element ref="config" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="components">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					a component collection, it can include some components such as button, switch, gesture, label etc...
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:group ref="componentGroup" minOccurs="0" maxOccurs="unbounded"></xsd:group>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="sensors">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
					a sensor collection, it contains the all sensors.
				]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="sensor" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	
	<xsd:element name="commands">
        <xsd:annotation>
        	<xsd:documentation><![CDATA[
				The parent element of command. include all the command's definition
			]]></xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="command" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:simpleType name="idType">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				The unique identifier type. 				
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:minInclusive value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
	
		
	<!-- ###############  component attr group  ################ -->
	
	<xsd:group name="componentGroup">
		<xsd:annotation>
			<xsd:documentation>
				<![CDATA[
					a component definition-group.
				]]>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element ref="switch" />
			<xsd:element ref="slider"/>
			<xsd:element ref="button"/>
			<xsd:element ref="label" />
			<xsd:element ref="gesture" />
			<xsd:element ref="image"/>
		</xsd:choice>
	</xsd:group>
	
	<!-- ###############  sensor  ################ -->

	<xsd:element name="sensor">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
			the definition of a command. the command must have a id , protocol.  
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:group ref="sensorGroup" minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
			<xsd:attribute name="id" type="idType" use="required" />
			<xsd:attribute name="type" type="sensorType" use="required" />
			<xsd:attribute name="name" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:group name="sensorGroup">
		<xsd:annotation>
			<xsd:documentation>
				<![CDATA[
					a sensor definition-group.
				]]>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element ref="include" minOccurs="0" maxOccurs="unbounded" />
			<xsd:element ref="state" minOccurs="0" maxOccurs="unbounded" />
			<xsd:element ref="min" minOccurs="0" maxOccurs="1" />
			<xsd:element ref="max" minOccurs="0" maxOccurs="1" />
		</xsd:choice>
	</xsd:group>

	<xsd:element name="min">
		<xsd:complexType>
			<xsd:attribute name="value" type="xsd:int" use="required" />
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="max">
		<xsd:complexType>
			<xsd:attribute name="value" type="xsd:int" use="required" />
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="state">
		<xsd:complexType>
			<xsd:attribute name="name" use="required" />
			<xsd:attribute name="value" use="optional" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:simpleType name="sensorType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="switch" />
			<xsd:enumeration value="level" />
			<xsd:enumeration value="range" />
			<xsd:enumeration value="color" />
			<xsd:enumeration value="custom" />
		</xsd:restriction>
	</xsd:simpleType>
	
	<!-- ###############  command  ################ -->
	
	<xsd:element name="command">
        <xsd:annotation>
        	<xsd:documentation><![CDATA[
			the definition of a device command. the command must have id , protocol.  
			]]></xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
	        <xsd:sequence>
	        		<xsd:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
	        </xsd:sequence>
				<xsd:attribute name="id" type="idType" use="required" />
				<xsd:attribute name="protocol" type="xsd:string" use="required"/>
				<!--  xsd:attribute name="value" type="xsd:string" use="required"/>-->
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="property">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
				describes the name-value pair for command.
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="name" type="xsd:string" use="required" />
			<xsd:attribute name="value" type="xsd:string" use="required" />
		</xsd:complexType>
	</xsd:element>
	
	<!-- ###############  switch  ################ -->
	
	<xsd:element name="switch">
		<xsd:annotation>
			<xsd:documentation>
				<![CDATA[
					The switch has two states: ON/OFF. it can include many commands.
				]]>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="on" minOccurs="1" maxOccurs="1"/>
				<xsd:element ref="off" minOccurs="1" maxOccurs="1" />
				<xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="id" type="idType" use="required" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="on">
		<xsd:annotation>
			<xsd:documentation>
				<![CDATA[
					The "on" status of a switch
				]]>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:group ref="macroGroup" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="off">
		<xsd:annotation>
			<xsd:documentation>
				<![CDATA[
					The "off" status of a switch
				]]>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:group ref="macroGroup" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<!-- ###############  slider  ################ -->
	
	<xsd:element name="slider">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="setValue" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="id" type="idType" use="required" />
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="setValue">
		<xsd:annotation>
			<xsd:documentation>
				<![CDATA[
					defines how to set value of slider by using a command.
				]]>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<!-- ###############  button  ################ -->
	
	<xsd:element name="button">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:group ref="macroGroup" minOccurs="0" maxOccurs="unbounded"></xsd:group>
			</xsd:sequence>
			<xsd:attribute name="id" type="idType" use="required" />
		</xsd:complexType>
	</xsd:element>
	
	<!-- ###############  label  ################ -->
	
	<xsd:element name="label">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="id" type="idType" use="required" />
		</xsd:complexType>
	</xsd:element>
	
	<!-- ###############  image  ################ -->
	
	<xsd:element name="image">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="id" type="idType" use="required" />
		</xsd:complexType>
	</xsd:element>
	
	<!-- ###############  gesture  ################ -->
	
	<xsd:element name="gesture">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="include" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="id" type="idType" use="required" />
		</xsd:complexType>
	</xsd:element>
	
	<!-- ###############  include  ################ -->
	
	<xsd:element name="include">
		<xsd:annotation>
			<xsd:documentation>
				<![CDATA[
					you can use this element to reference a command by using type="command", 
					or a sensor by using type="sensor"
				]]>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="type" type="xsd:string" ></xsd:attribute>
			<xsd:attribute name="ref" type="idType"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<!-- ###############  delay  ################ -->
	
	<xsd:element name="delay" type="xsd:int" >
		<xsd:annotation>
			<xsd:documentation>
				<![CDATA[
					defines the time it will delay when a command is excuting.
				]]>
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	
	<!-- ###############  macro attr group  ################ -->
	
	<xsd:group name="macroGroup">
		<xsd:annotation>
			<xsd:documentation>
				<![CDATA[
					a macro definition-group. 
				]]>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element ref="delay" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element ref="include"  minOccurs="0" maxOccurs="unbounded"/>
		</xsd:choice>
	</xsd:group>
	<!-- ###############  cotrollerConfig  ################ -->
	<xsd:element name="config">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="property" minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>